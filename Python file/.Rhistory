library(xlsx)
install.packages("openxlsx")
library(openxlsx)
a<-read.xlsx('/Users/liaoshousan/Desktop/大三下/作業研究/OR107-2_case01_data.xlsx',sheet=1)
a
library(openxlsx)
library(openxlsx)
a<-read.xlsx('/Users/liaoshousan/Desktop/大三下/作業研究/OR107-2_case01_data.xlsx',sheet=1)
a
install.packages("openxlsx")
library(openxlsx)
a<-read.xlsx('/Users/liaoshousan/Desktop/大三下/作業研究/OR107-2_case01_data.xlsx',sheet=1)
a
library(openxlsx)
file <- '/Users/liaoshousan/Desktop/大三下/作業研究/OR107-2_case01_data.xlsx'
a<-read.xlsx(file,sheet=2)
a
library(openxlsx)
file <- '/Users/liaoshousan/Desktop/大三下/作業研究/OR107-2_case01_data.xlsx'
a<-read.xlsx(file,sheet=3)
a
library(openxlsx)
file <- '/Users/liaoshousan/Desktop/大三下/作業研究/OR107-2_case01_data.xlsx'
a<-read.xlsx(file,sheet=4)
a
library(openxlsx)
library(Hmisc)
file <- '/Users/liaoshousan/Desktop/大三下/作業研究/OR107-2_case01_data.xlsx'
a<-read.xlsx(file,sheet=4)
describe(a)
library(SportsAnalytics)
install.packages("SportsAnalytics")
library(SportsAnalytics)
NBA1516<-fetch_NBAPlayerStatistics("15-16")
View(NBA1516)
str(NBA1516)
head(NBA1516)
NBA1516[NBA1516$GamesPlayed]
NBA1516['NBA1516$GamesPlayed']
NBA1516(NBA1516$GamesPlayed)
NBA1516[NBA1516$GamesPlayed]
NBA1516Order<-NBA1516[order(NBA1516$GamesPlayed,decreasing = T),]
NBA1516Order[1:5,]
NBA1516Order[1:5,Name]
NBA1516Order[1:5,'Name']
NBA1516Order[1:5,2:4]
NBA1516[1:5,2:4]
subset(NBA1516,Team==BOS)
subset(NBA1516,Team=='BOS)
subset(NBA1516,Team=='BOS')
subset(NBA1516,Team=='BOS')
subset(NBA1516,Team=='BOS') [1:5,1:5]
grepl('James',NBA1516["Name"])
NBA1516$Team
grepl('James',NBA1516$Team)
NBA1516[grepl('James',NBA1516$Team)]
NBA1516[grepl('James',NBA1516$Team),]
NBA1516[grepl('James',NBA1516$Name),]
sessionInfo()
a =sep(1,5,2)
str(a)
a =seq(1,5,2)
str(a)
install.packages("lubridate")
str(a)
library(lubridate)
ydm('1998/08/22')
library(lubridate)
ydm('1998/08/22')
library(lubridate)
ymd('2012/3/3')
ymd('1998/09/22')
ymd('1998/08/22')
ymd('1998/8/22')
ymd('98/8/22')
ymd('8/8/22')
100 %% 12
100/12
100^12
100^4
100^2
x<-10.765
round(x,digits=2)
ceiling(x,digits=2)
ceiling(x)
floor(x)
a<-data.frame(c(1:10)
c(2:11)
c(3:12))
a
a<-data.frame(1,3,4)
a
a<-data.frame(c(2:6),c(3:7),c(4:8))
a
a<-data.frame('Sam'c(2:6),'David'c(3:7),'Luisa'c(4:8))
a
a<-data.frame('Sam'= c(2:6),'David'= c(3:7),'Luisa'= c(4:8))
a
a[2]
a[2]<-NULL
a
install.packages("data.table")
library(data.table)
NBA1516DT <- data.table(NBA1516)
class(NBA1516DT)
NBA1516DT(, FieldGoalMade = mean(FieldGoalMade))
NBA1516DT[, FieldGoalMade = mean(FieldGoalMade)]
NBA1516DT[, FieldGoalsMade = mean(FieldGoalsMade)]
NBA1516DT[,.FieldGoalsMade = mean(FieldGoalsMade)]
NBA1516DT[,.FieldGoalsMade = mean(FieldGoalsMade)]
NBA1516DT[,.ThreesMadeMin = mean(ThreesMadeMin)]
NBA1516DT[,.ThreesMadMin = mean(ThreesMadeMin)]
NBA1516DT[,.(ThreesMadMin = mean(ThreesMadeMin))]
NBA1516DT[,.ThreesMadMin = mean(ThreesMadeMin)]
NBA1516DT[,mean(GamesPlayed)] ##因沒有篩選需求，,前方留空
NBA1516DT[,ThreesMadMin = mean(ThreesMadeMin)]
NBA1516DT[,mean(ThreesMadeMin)]
NBA1516DT[,mean(GamesPlayed)]
NBA1516DT[,.(mean(GamesPlayed),max(GamesPlayed),Min(OffensiveRebounds))]
NBA1516DT[,.(mean(GamesPlayed),max(GamesPlayed),Max(OffensiveRebounds))]
NBA1516DT[,.(mean(GamesPlayed),max(GamesPlayed),max(OffensiveRebounds))]
NBA1516DT[,.(ccc=mean(GamesPlayed),bbb=max(GamesPlayed),aaa=max(OffensiveRebounds))]
NBA1516DT[,.(ccc=mean(GamesPlayed),bbb=max(GamesPlayed),aaa=max(OffensiveRebounds)),by = Team ]
NBA1516DT[GamesPlayed>50,.(ccc=mean(GamesPlayed),bbb=max(GamesPlayed),aaa=max(OffensiveRebounds)),by = Team ]
NBA1516DT[GamesPlayed>80,.(ccc=mean(GamesPlayed),bbb=max(GamesPlayed),aaa=max(OffensiveRebounds)),by = Team ]
NBA1516DT[GamesPlayed>80 & OffensiveRebounds>30 ,.(ccc=mean(GamesPlayed),bbb=max(GamesPlayed),aaa=max(OffensiveRebounds)),by = Team ]
NBA1516DT[GamesPlayed>80 & OffensiveRebounds>30 ,.(.N ccc=mean(GamesPlayed),bbb=max(GamesPlayed),aaa=max(OffensiveRebounds)),by = Team ]
NBA1516DT[GamesPlayed>80 & OffensiveRebounds>30 ,.(.N , ccc=mean(GamesPlayed),bbb=max(GamesPlayed),aaa=max(OffensiveRebounds)),by = Team ]
NBA1516DT[TotalPoints/GamesPlayed >= 20]
NBA1516DT[TotalPoints/GamesPlayed >= 20,Assists/GamesPlayed>=5,
TotalRebounds/GamesPlayed>=5,GamesPlayed>50,
GamesStarted/GamesPlayed>=0.8,
.(.N,FieldGoalsMade/FieldGoalsAttempted,ThreesMade/ThreesAttempted)]
NBA1516DT[TotalPoints/GamesPlayed >= 20,Assists/GamesPlayed >=5 ,
TotalRebounds/GamesPlayed>=5,GamesPlayed>50,
GamesStarted/GamesPlayed>=0.8]
NBA1516DT[TotalPoints/GamesPlayed >= 20 & Assists/GamesPlayed >=5
& TotalRebounds/GamesPlayed>=5 & GamesPlayed>50 &
GamesStarted/GamesPlayed>=0.8]
NBA1516DT[TotalPoints/GamesPlayed >= 20 & Assists/GamesPlayed >=5
& TotalRebounds/GamesPlayed>=5 & GamesPlayed>50 &
GamesStarted/GamesPlayed>=0.8,
.(.N,FieldGoalsMade/FieldGoalsAttempted,
ThreesMade/ThreesAttempted)]
NBA1516DT[TotalPoints/GamesPlayed >= 20 & Assists/GamesPlayed >=5
& TotalRebounds/GamesPlayed>=5 & GamesPlayed>50 &
GamesStarted/GamesPlayed>=0.8,
.(.N, FG = FieldGoalsMade/FieldGoalsAttempted, 3FG =
ThreesMade/ThreesAttempted),by = Name]
NBA1516DT[TotalPoints/GamesPlayed >= 20 & Assists/GamesPlayed >=5
& TotalRebounds/GamesPlayed>=5 & GamesPlayed>50 &
GamesStarted/GamesPlayed>=0.8,
.(.N, FG = FieldGoalsMade/FieldGoalsAttempted, 3FG =
ThreesMade/ThreesAttempted),by = Name]
NBA1516DT[TotalPoints/GamesPlayed >= 20 & Assists/GamesPlayed >=5
& TotalRebounds/GamesPlayed>=5 & GamesPlayed>50 &
GamesStarted/GamesPlayed>=0.8,
.( FG = FieldGoalsMade/FieldGoalsAttempted, 3FG =
ThreesMade/ThreesAttempted),by = Name]
NBA1516DT[TotalPoints/GamesPlayed >= 20 & Assists/GamesPlayed >=5
& TotalRebounds/GamesPlayed>=5 & GamesPlayed>50 &
GamesStarted/GamesPlayed>=0.8,
.( FG = FieldGoalsMade/FieldGoalsAttempted, 3FG =
ThreesMade/ThreesAttempted)]
NBA1516DT[TotalPoints/GamesPlayed >= 20 & Assists/GamesPlayed >=5
& TotalRebounds/GamesPlayed>=5 & GamesPlayed>50 &
GamesStarted/GamesPlayed>=0.8,
.( FG = FieldGoalsMade/FieldGoalsAttempted, 3FG =
ThreesMade/ThreesAttempted)]
NBA1516DT[TotalPoints/GamesPlayed >= 20 & Assists/GamesPlayed >=5
& TotalRebounds/GamesPlayed>=5 & GamesPlayed>50 &
GamesStarted/GamesPlayed>=0.8,
.(FG = FieldGoalsMade/FieldGoalsAttempted, F3G =
ThreesMade/ThreesAttempted)]
& TotalRebounds/GamesPlayed>=5 & GamesPlayed>50 &
GamesStarted/GamesPlayed>=0.8,
.(FG = FieldGoalsMade/FieldGoalsAttempted, F3G =
ThreesMade/ThreesAttempted)][$name]
& TotalRebounds/GamesPlayed>=5 & GamesPlayed>50 &
GamesStarted/GamesPlayed>=0.8,
.(FG = FieldGoalsMade/FieldGoalsAttempted, F3G =
ThreesMade/ThreesAttempted)]$name
NBA1516DT[TotalPoints/GamesPlayed >= 20 & Assists/GamesPlayed >=5
& TotalRebounds/GamesPlayed>=5 & GamesPlayed>50 &
GamesStarted/GamesPlayed>=0.8,
.(FG = FieldGoalsMade/FieldGoalsAttempted, F3G =
ThreesMade/ThreesAttempted)]$name
NBA1516DT[TotalPoints/GamesPlayed >= 20 & Assists/GamesPlayed >=5
& TotalRebounds/GamesPlayed>=5 & GamesPlayed>50 &
GamesStarted/GamesPlayed>=0.8,
.(FG = FieldGoalsMade/FieldGoalsAttempted, F3G =
ThreesMade/ThreesAttempted)]
NBA1516DT[TotalPoints/GamesPlayed >= 20 & Assists/GamesPlayed >=5
& TotalRebounds/GamesPlayed>=5 & GamesPlayed>50 &
GamesStarted/GamesPlayed>=0.8]
gender_outlier <-read.csv("gender_outlier.csv")
attach(gender_outlier)
Male=subset(gender_outlier, Gender=="male")
Female=subset(gender_outlier, Gender=="female")
Ma.mean<-colMeans(Male[, -4])
Ma.mean
Fe.mean<-colMeans(Female[, -4])
Fe.mean
Ma.var<-cov(Male[c(1:3)], use="pairwise")
Ma.var
Fe.var<-cov(Female[c(1:3)], use="pairwise")
Fe.var
Male$mdis<- mahalanobis(Male[, -4], Ma.mean, Ma.var)
Female$mdis<-mahalanobis(Female[, -4], Fe.mean, Fe.var)
Male$maout<-(Male$mdis< qchisq(df=3, p=0.95))
Female$feout<-(Female$mdis< qchisq(df=3, p=0.95))
attach(Male)
which(maout==FALSE)
library(readxl)
gender_outlier <-read.csv("gender_outlier.csv")
attach(gender_outlier)
Male=subset(gender_outlier, Gender=="male")
Female=subset(gender_outlier, Gender=="female")
Ma.mean<-colMeans(Male[, -4])
Ma.mean
Fe.mean<-colMeans(Female[, -4])
Fe.mean
Ma.var<-cov(Male[c(1:3)], use="pairwise")
Ma.var
Fe.var<-cov(Female[c(1:3)], use="pairwise")
Fe.var
Male$mdis<- mahalanobis(Male[, -4], Ma.mean, Ma.var)
Female$mdis<-mahalanobis(Female[, -4], Fe.mean, Fe.var)
Male$maout<-(Male$mdis< qchisq(df=3, p=0.95))
Female$feout<-(Female$mdis< qchisq(df=3, p=0.95))
attach(Male)
which(maout==FALSE)
library(readxl)
gender_outlier <-read.csv("gender_outlier.csv")
attach(gender_outlier)
Male=subset(gender_outlier, Gender=="male")
Female=subset(gender_outlier, Gender=="female")
Ma.mean<-colMeans(Male[, -4])
Ma.mean
Fe.mean<-colMeans(Female[, -4])
Fe.mean
Ma.var<-cov(Male[c(1:3)], use="pairwise")
Ma.var
Fe.var<-cov(Female[c(1:3)], use="pairwise")
Fe.var
Male$mdis<- mahalanobis(Male[, -4], Ma.mean, Ma.var)
Female$mdis<-mahalanobis(Female[, -4], Fe.mean, Fe.var)
Male$maout<-(Male$mdis< qchisq(df=3, p=0.95))
Female$feout<-(Female$mdis< qchisq(df=3, p=0.95))
attach(Male)
#which(maout==FALSE)
library(readxl)
gender_outlier <-read.csv("gender_outlier.csv")
attach(gender_outlier)
Male=subset(gender_outlier, Gender=="male")
Female=subset(gender_outlier, Gender=="female")
Ma.mean<-colMeans(Male[, -4])
Ma.mean
Fe.mean<-colMeans(Female[, -4])
Fe.mean
Ma.var<-cov(Male[c(1:3)], use="pairwise")
Ma.var
Fe.var<-cov(Female[c(1:3)], use="pairwise")
Fe.var
Male$mdis<- mahalanobis(Male[, -4], Ma.mean, Ma.var)
Female$mdis<-mahalanobis(Female[, -4], Fe.mean, Fe.var)
Male$maout<-(Male$mdis< qchisq(df=3, p=0.95))
Female$feout<-(Female$mdis< qchisq(df=3, p=0.95))
#attach(Male)
#which(maout==FALSE)
library(readxl)
gender_outlier <-read.csv("gender_outlier.csv")
library(readxl)
a <- '/Users/liaoshousan/Downloads/R_files/gender_outlier.csv'
gender_outlier <-read.csv(a)
attach(gender_outlier)
Male=subset(gender_outlier, Gender=="male")
Female=subset(gender_outlier, Gender=="female")
Ma.mean<-colMeans(Male[, -4])
Ma.mean
Fe.mean<-colMeans(Female[, -4])
Fe.mean
Ma.var<-cov(Male[c(1:3)], use="pairwise")
Ma.var
Fe.var<-cov(Female[c(1:3)], use="pairwise")
Fe.var
Male$mdis<- mahalanobis(Male[, -4], Ma.mean, Ma.var)
Female$mdis<-mahalanobis(Female[, -4], Fe.mean, Fe.var)
Male$maout<-(Male$mdis< qchisq(df=3, p=0.95))
Female$feout<-(Female$mdis< qchisq(df=3, p=0.95))
#attach(Male)
#which(maout==FALSE)
library(readxl)
a <- '/Users/liaoshousan/Downloads/R_files/gender_outlier.csv'
gender_outlier <-read.csv(a)
attach(gender_outlier)
Male=subset(gender_outlier, Gender=="male")
Female=subset(gender_outlier, Gender=="female")
Ma.mean<-colMeans(Male[, -4])
Ma.mean
Fe.mean<-colMeans(Female[, -4])
Fe.mean
Ma.var<-cov(Male[c(1:3)], use="pairwise")
Ma.var
Fe.var<-cov(Female[c(1:3)], use="pairwise")
Fe.var
Male$mdis<- mahalanobis(Male[, -4], Ma.mean, Ma.var)
Female$mdis<-mahalanobis(Female[, -4], Fe.mean, Fe.var)
Male$maout<-(Male$mdis< qchisq(df=3, p=0.95))
Female$feout<-(Female$mdis< qchisq(df=3, p=0.95))
attach(Male)
which(maout==FALSE)
View(gender_outlier)
?attach
Fe.var
MaleDT[mount==TRUE]
library(readxl)
library(data.table) ##載入
a <- '/Users/liaoshousan/Downloads/R_files/gender_outlier.csv'
gender_outlier <-read.csv(a)
attach(gender_outlier)
Male=subset(gender_outlier, Gender=="male")
Female=subset(gender_outlier, Gender=="female")
Ma.mean<-colMeans(Male[, -4])
Ma.mean
Fe.mean<-colMeans(Female[, -4])
Fe.mean
Ma.var<-cov(Male[c(1:3)], use="pairwise")
Ma.var
Fe.var<-cov(Female[c(1:3)], use="pairwise")
Fe.var
Male$mdis<- mahalanobis(Male[, -4], Ma.mean, Ma.var)
Female$mdis<-mahalanobis(Female[, -4], Fe.mean, Fe.var)
Male$maout<-(Male$mdis< qchisq(df=3, p=0.95))
Female$feout<-(Female$mdis< qchisq(df=3, p=0.95))
attach(Male)
Male$maout
which(maout==FALSE)
MaleDT<-data.table(Male)
MaleDT[mount==TRUE]
MaleDT[maount==TRUE]
MaleDT[maout==TRUE]
MaleDT[maout==FALSE]
which(maout==FALSE)
View(MaleDT)
stock<- read.table("2016stock.csv", header=T, sep=",")
x=1:nrow(stock); y=stock$Index #original data
plot(x,y)
install.packages("qcc")
library(qcc)
y
stock<- read.table("2016stock.csv", header=T, sep=",")
a <- '/Users/liaoshousan/Downloads/R_files/2016stock.csv'
stock<- read.table(a, header=T, sep=",")
x=1:nrow(stock); y=stock$Index #original data
plot(x,y)
install.packages("qcc")
install.packages("qcc")
library(qcc)
a <- '/Users/liaoshousan/Downloads/R_files/2016stock.csv'
stock<- read.table(a, header=T, sep=",")
x=1:nrow(stock); y=stock$Index #original data
plot(x,y)
install.packages("qcc")
library(qcc)
install.packages("qcc")
a <- '/Users/liaoshousan/Downloads/R_files/2016stock.csv'
stock<- read.table(a, header=T, sep=",")
x=1:nrow(stock); y=stock$Index #original data
plot(x,y)
install.packages("qcc")
library(qcc)
n = c(5,10,20) #length (n=5, n=10, n=20 moving average)
y1=cbind(y,y,y) #初始化SMA
for (nd in 1:length(n)) #nd: index for length of moving average
{
for (i in (n[nd]+1) : length(y))
{
j= i-n[nd]; k=i-1;
y1[i, nd] = mean(y[j : k])
}
}
a <- '/Users/liaoshousan/Downloads/R_files/2016stock.csv'
stock<- read.table(a, header=T, sep=",")
x=1:nrow(stock); y=stock$Index #original data
plot(x,y)
library(qcc)
n = c(5,10,20) #length (n=5, n=10, n=20 moving average)
y1=cbind(y,y,y) #初始化SMA
for (nd in 1:length(n)) #nd: index for length of moving average
{
for (i in (n[nd]+1) : length(y))
{
j= i-n[nd]; k=i-1;
y1[i, nd] = mean(y[j : k])
}
}
y1
head(y1)
head(y1)
View(backtest)
View(backtest)
View(stock)
y2=cbind(y,y,y) #初始化EWMA
lambda1=0.1; lambda2=0.3; gap=0.1;
for (ld in 1 : ((lambda2-lambda1)/gap+1))
{
lambda=lambda1+gap*(ld-1)
for (i in 2 : length(y))
{
y2[i, ld]= lambda*y[i-1] + (1-lambda)*y2[i-1, ld]
}
}
colMeans((y2-cbind(y,y,y))^2) #mean squared error
plot(x, y, col=1, ylab="stock", xlab="date", main="Exponentially Weighted Moving Average")
points(x, y2[,1], col=2, pch=2)
points(x, y2[,2], col=3, pch=3)
points(x, y2[,3], col=4, pch=4)
lines(ewmaSmooth(x, y, lambda=0.1), col="brown")
y2=cbind(y,y,y) #初始化EWMA
lambda1=0.1; lambda2=0.3; gap=0.1;
for (ld in 1 : ((lambda2-lambda1)/gap+1))
{
lambda=lambda1+gap*(ld-1)
for (i in 2 : length(y))
{
y2[i, ld]= lambda*y[i-1] + (1-lambda)*y2[i-1, ld]
}
}
colMeans((y2-cbind(y,y,y))^2) #mean squared error
plot(x, y, col=1, ylab="stock", xlab="date", main="Exponentially Weighted Moving Average")
points(x, y2[,1], col=2, pch=2)
points(x, y2[,2], col=3, pch=3)
points(x, y2[,3], col=4, pch=4)
lines(ewmaSmooth(x, y, lambda=0.1), col="brown")
head(y2)
hist(Sepal.Length)
data(iris)
attributes(iris)
str(iris)
summary(iris)
var=c(1:4)
colMeans(iris[,-5])
cor(Sepal.Length, Sepal.Width)
corr=cor(iris[var], use="pairwise")
corr
cov(Petal.Length, Petal.Width)
covv=cov(iris[var], use="pairwise")
covv
install.packages("timeDate")
library(timeDate)
help(data.Normalization)
help(data.Normalization)
?data.Normalization)
?data.Normalization
??data.Normalization
3+5
log2(6)
sqrt(36)
g_stock_prices <- getSymbols("GOOG", src = "yahoo", from = "2008-01-01", auto.assign = FALSE)
```{r}
? getSymbols
??getSymbols
?? getSymbols
install.packages('tidyverse)
install.packages('tidyverse')
install.packages('tidyverse')
g_stock_prices <- getSymbols("GOOG", src = "yahoo", from = "2008-01-01", auto.assign = FALSE)
library(quantmod)
install.packages(c("quantmod", "dygraphs"))
library(quantmod)
library(dygraphs)
chartSeries(g_stock_prices)
chartSeries(g_stock_prices)
g_stock_prices <- getSymbols("GOOG", src = "yahoo", from = "2008-01-01", auto.assign = FALSE)
chartSeries(g_stock_prices)
dygraph(g_stock_prices[,c("GOOG.Close")], main = "Google Stock Price Starting in 2008")
install.packages("rmarkdown")
library(rmarkdown)
install.packages("rmarkdown")
if (!requireNamespace("BiocManager"))
install.packages("BiocManager")
BiocManager::install()
BiocManager::install("genefilter")
library(MASS)
library(cluster)
library(clusterSim)
data(iris)
iris.nm<-data.Normalization(iris[, -5], type="n4", normalization="column")
gender_size<- read.csv("gender_size.csv")
gender.nm<-data.Normalization (gender_size[, -4], type="n4", normalization="column")
min.nc=2
max.nc=8
data(iris)
iris.nm<-data.Normalization(iris[, -5], type="n4", normalization="column")
library(MASS)
library(cluster)
data(iris)
install.packages("BiocManager")
data(iris)
iris.nm<-data.Normalization(iris[, -5], type="n4", normalization="column")
~/
setwd("~/Desktop/Cathay_BigData-Competition/Data")
writeLines('','foo.txt')
library(clusterSim)
data(iris)
iris.nm<-data.Normalization(iris[, -5], type="n4", normalization="column")
library(clusterSim)
install.packages("clusterSim")
install.packages("devtools")
devtools::install_github("AndreaCirilloAC/updateR")
library(devtools)
